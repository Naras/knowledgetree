package org.srvvp.knowledgetree.entity;
// Generated 5 Apr, 2017 12:15:43 PM by Hibernate Tools 3.2.4.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.validator.NotNull;

/**
 * SubjectHasWork generated by hbm2java
 */
@Entity
@Table(name = "subject_has_work", catalog = "knowledgetree")
public class SubjectHasWork implements java.io.Serializable {

	private SubjectHasWorkId id;
	private WorkSubjectRelation workSubjectRelation;
	private Work work;
	private Subject subject;

	public SubjectHasWork() {
	}

	public SubjectHasWork(SubjectHasWorkId id,
			WorkSubjectRelation workSubjectRelation, Work work, Subject subject) {
		this.id = id;
		this.workSubjectRelation = workSubjectRelation;
		this.work = work;
		this.subject = subject;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "subject", column = @Column(name = "Subject", nullable = false, length = 20)),
			@AttributeOverride(name = "work", column = @Column(name = "Work", nullable = false, length = 20)),
			@AttributeOverride(name = "workSubjectRelation", column = @Column(name = "work_subject_relation", nullable = false, length = 20))})
	@NotNull
	public SubjectHasWorkId getId() {
		return this.id;
	}

	public void setId(SubjectHasWorkId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "work_subject_relation", nullable = false, insertable = false, updatable = false)
	@NotNull
	public WorkSubjectRelation getWorkSubjectRelation() {
		return this.workSubjectRelation;
	}

	public void setWorkSubjectRelation(WorkSubjectRelation workSubjectRelation) {
		this.workSubjectRelation = workSubjectRelation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Work", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Work getWork() {
		return this.work;
	}

	public void setWork(Work work) {
		this.work = work;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Subject", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

}
