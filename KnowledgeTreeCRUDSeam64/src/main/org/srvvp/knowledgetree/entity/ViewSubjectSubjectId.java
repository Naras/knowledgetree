package org.srvvp.knowledgetree.entity;
// Generated 5 Apr, 2017 12:15:43 PM by Hibernate Tools 3.2.4.GA

import javax.persistence.Column;
import javax.persistence.Embeddable;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * ViewSubjectSubjectId generated by hbm2java
 */
@Embeddable
public class ViewSubjectSubjectId implements java.io.Serializable {

	private String sub1id;
	private String subject1;
	private String subject1description;
	private String sub2id;
	private String subject2;
	private String subject2description;
	private String relation;
	private String relationDescription;

	public ViewSubjectSubjectId() {
	}

	public ViewSubjectSubjectId(String sub1id, String subject1, String sub2id,
			String subject2) {
		this.sub1id = sub1id;
		this.subject1 = subject1;
		this.sub2id = sub2id;
		this.subject2 = subject2;
	}
	public ViewSubjectSubjectId(String sub1id, String subject1,
			String subject1description, String sub2id, String subject2,
			String subject2description, String relation,
			String relationDescription) {
		this.sub1id = sub1id;
		this.subject1 = subject1;
		this.subject1description = subject1description;
		this.sub2id = sub2id;
		this.subject2 = subject2;
		this.subject2description = subject2description;
		this.relation = relation;
		this.relationDescription = relationDescription;
	}

	@Column(name = "sub1Id", nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getSub1id() {
		return this.sub1id;
	}

	public void setSub1id(String sub1id) {
		this.sub1id = sub1id;
	}

	@Column(name = "subject1", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getSubject1() {
		return this.subject1;
	}

	public void setSubject1(String subject1) {
		this.subject1 = subject1;
	}

	@Column(name = "subject1Description", length = 5000)
	@Length(max = 5000)
	public String getSubject1description() {
		return this.subject1description;
	}

	public void setSubject1description(String subject1description) {
		this.subject1description = subject1description;
	}

	@Column(name = "sub2Id", nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getSub2id() {
		return this.sub2id;
	}

	public void setSub2id(String sub2id) {
		this.sub2id = sub2id;
	}

	@Column(name = "subject2", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getSubject2() {
		return this.subject2;
	}

	public void setSubject2(String subject2) {
		this.subject2 = subject2;
	}

	@Column(name = "subject2Description", length = 5000)
	@Length(max = 5000)
	public String getSubject2description() {
		return this.subject2description;
	}

	public void setSubject2description(String subject2description) {
		this.subject2description = subject2description;
	}

	@Column(name = "relation", length = 100)
	@Length(max = 100)
	public String getRelation() {
		return this.relation;
	}

	public void setRelation(String relation) {
		this.relation = relation;
	}

	@Column(name = "relation_description", length = 1000)
	@Length(max = 1000)
	public String getRelationDescription() {
		return this.relationDescription;
	}

	public void setRelationDescription(String relationDescription) {
		this.relationDescription = relationDescription;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof ViewSubjectSubjectId))
			return false;
		ViewSubjectSubjectId castOther = (ViewSubjectSubjectId) other;

		return ((this.getSub1id() == castOther.getSub1id()) || (this
				.getSub1id() != null
				&& castOther.getSub1id() != null && this.getSub1id().equals(
				castOther.getSub1id())))
				&& ((this.getSubject1() == castOther.getSubject1()) || (this
						.getSubject1() != null
						&& castOther.getSubject1() != null && this
						.getSubject1().equals(castOther.getSubject1())))
				&& ((this.getSubject1description() == castOther
						.getSubject1description()) || (this
						.getSubject1description() != null
						&& castOther.getSubject1description() != null && this
						.getSubject1description().equals(
								castOther.getSubject1description())))
				&& ((this.getSub2id() == castOther.getSub2id()) || (this
						.getSub2id() != null
						&& castOther.getSub2id() != null && this.getSub2id()
						.equals(castOther.getSub2id())))
				&& ((this.getSubject2() == castOther.getSubject2()) || (this
						.getSubject2() != null
						&& castOther.getSubject2() != null && this
						.getSubject2().equals(castOther.getSubject2())))
				&& ((this.getSubject2description() == castOther
						.getSubject2description()) || (this
						.getSubject2description() != null
						&& castOther.getSubject2description() != null && this
						.getSubject2description().equals(
								castOther.getSubject2description())))
				&& ((this.getRelation() == castOther.getRelation()) || (this
						.getRelation() != null
						&& castOther.getRelation() != null && this
						.getRelation().equals(castOther.getRelation())))
				&& ((this.getRelationDescription() == castOther
						.getRelationDescription()) || (this
						.getRelationDescription() != null
						&& castOther.getRelationDescription() != null && this
						.getRelationDescription().equals(
								castOther.getRelationDescription())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result
				+ (getSub1id() == null ? 0 : this.getSub1id().hashCode());
		result = 37 * result
				+ (getSubject1() == null ? 0 : this.getSubject1().hashCode());
		result = 37
				* result
				+ (getSubject1description() == null ? 0 : this
						.getSubject1description().hashCode());
		result = 37 * result
				+ (getSub2id() == null ? 0 : this.getSub2id().hashCode());
		result = 37 * result
				+ (getSubject2() == null ? 0 : this.getSubject2().hashCode());
		result = 37
				* result
				+ (getSubject2description() == null ? 0 : this
						.getSubject2description().hashCode());
		result = 37 * result
				+ (getRelation() == null ? 0 : this.getRelation().hashCode());
		result = 37
				* result
				+ (getRelationDescription() == null ? 0 : this
						.getRelationDescription().hashCode());
		return result;
	}

}
