package org.srvvp.knowledgetree.entity;
// Generated 5 Apr, 2017 12:15:43 PM by Hibernate Tools 3.2.4.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.validator.NotNull;

/**
 * SubjectRelatestoSubject generated by hbm2java
 */
@Entity
@Table(name = "subject_relatesto_subject", catalog = "knowledgetree")
public class SubjectRelatestoSubject implements java.io.Serializable {

	private SubjectRelatestoSubjectId id;
	private SubjectSubjectRelation subjectSubjectRelation;
	private Subject subjectBySubject1;
	private Subject subjectBySubject2;
	private Short sortorder;

	public SubjectRelatestoSubject() {
	}

	public SubjectRelatestoSubject(SubjectRelatestoSubjectId id,
			Subject subjectBySubject1, Subject subjectBySubject2) {
		this.id = id;
		this.subjectBySubject1 = subjectBySubject1;
		this.subjectBySubject2 = subjectBySubject2;
	}
	public SubjectRelatestoSubject(SubjectRelatestoSubjectId id,
			SubjectSubjectRelation subjectSubjectRelation,
			Subject subjectBySubject1, Subject subjectBySubject2,
			Short sortorder) {
		this.id = id;
		this.subjectSubjectRelation = subjectSubjectRelation;
		this.subjectBySubject1 = subjectBySubject1;
		this.subjectBySubject2 = subjectBySubject2;
		this.sortorder = sortorder;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "subject1", column = @Column(name = "Subject1", nullable = false, length = 20)),
			@AttributeOverride(name = "subject2", column = @Column(name = "Subject2", nullable = false, length = 20))})
	@NotNull
	public SubjectRelatestoSubjectId getId() {
		return this.id;
	}

	public void setId(SubjectRelatestoSubjectId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "relation_id")
	public SubjectSubjectRelation getSubjectSubjectRelation() {
		return this.subjectSubjectRelation;
	}

	public void setSubjectSubjectRelation(
			SubjectSubjectRelation subjectSubjectRelation) {
		this.subjectSubjectRelation = subjectSubjectRelation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Subject1", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Subject getSubjectBySubject1() {
		return this.subjectBySubject1;
	}

	public void setSubjectBySubject1(Subject subjectBySubject1) {
		this.subjectBySubject1 = subjectBySubject1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Subject2", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Subject getSubjectBySubject2() {
		return this.subjectBySubject2;
	}

	public void setSubjectBySubject2(Subject subjectBySubject2) {
		this.subjectBySubject2 = subjectBySubject2;
	}

	@Column(name = "sortorder")
	public Short getSortorder() {
		return this.sortorder;
	}

	public void setSortorder(Short sortorder) {
		this.sortorder = sortorder;
	}

}
