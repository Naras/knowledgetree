package org.srvvp.knowledgetree.entity;
// Generated 5 Apr, 2017 12:15:43 PM by Hibernate Tools 3.2.4.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.validator.NotNull;

/**
 * WorkRelatestoWork generated by hbm2java
 */
@Entity
@Table(name = "work_relatesto_work", catalog = "knowledgetree")
public class WorkRelatestoWork implements java.io.Serializable {

	private WorkRelatestoWorkId id;
	private WorkWorkRelation workWorkRelation;
	private Work workByWork1;
	private Work workByWork2;
	private Short sortorder;

	public WorkRelatestoWork() {
	}

	public WorkRelatestoWork(WorkRelatestoWorkId id, Work workByWork1,
			Work workByWork2) {
		this.id = id;
		this.workByWork1 = workByWork1;
		this.workByWork2 = workByWork2;
	}
	public WorkRelatestoWork(WorkRelatestoWorkId id,
			WorkWorkRelation workWorkRelation, Work workByWork1,
			Work workByWork2, Short sortorder) {
		this.id = id;
		this.workWorkRelation = workWorkRelation;
		this.workByWork1 = workByWork1;
		this.workByWork2 = workByWork2;
		this.sortorder = sortorder;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "work1", column = @Column(name = "work1", nullable = false, length = 20)),
			@AttributeOverride(name = "work2", column = @Column(name = "work2", nullable = false, length = 20))})
	@NotNull
	public WorkRelatestoWorkId getId() {
		return this.id;
	}

	public void setId(WorkRelatestoWorkId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "relation_id")
	public WorkWorkRelation getWorkWorkRelation() {
		return this.workWorkRelation;
	}

	public void setWorkWorkRelation(WorkWorkRelation workWorkRelation) {
		this.workWorkRelation = workWorkRelation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "work1", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Work getWorkByWork1() {
		return this.workByWork1;
	}

	public void setWorkByWork1(Work workByWork1) {
		this.workByWork1 = workByWork1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "work2", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Work getWorkByWork2() {
		return this.workByWork2;
	}

	public void setWorkByWork2(Work workByWork2) {
		this.workByWork2 = workByWork2;
	}

	@Column(name = "sortorder")
	public Short getSortorder() {
		return this.sortorder;
	}

	public void setSortorder(Short sortorder) {
		this.sortorder = sortorder;
	}

}
