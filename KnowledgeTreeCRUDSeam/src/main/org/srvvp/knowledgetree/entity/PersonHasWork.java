package org.srvvp.knowledgetree.entity;
// Generated 3 Oct, 2017 8:09:20 PM by Hibernate Tools 3.2.4.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.validator.NotNull;

/**
 * PersonHasWork generated by hbm2java
 */
@Entity
@Table(name = "person_has_work", catalog = "knowledgetree")
public class PersonHasWork implements java.io.Serializable {

	private PersonHasWorkId id;
	private PersonWorkRelation personWorkRelation;
	private Person person;
	private Work work;

	public PersonHasWork() {
	}

	public PersonHasWork(PersonHasWorkId id,
			PersonWorkRelation personWorkRelation, Person person, Work work) {
		this.id = id;
		this.personWorkRelation = personWorkRelation;
		this.person = person;
		this.work = work;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "person", column = @Column(name = "Person", nullable = false, length = 20)),
			@AttributeOverride(name = "work", column = @Column(name = "Work", nullable = false, length = 20)),
			@AttributeOverride(name = "relation", column = @Column(name = "Relation", nullable = false, length = 20))})
	@NotNull
	public PersonHasWorkId getId() {
		return this.id;
	}

	public void setId(PersonHasWorkId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Relation", nullable = false, insertable = false, updatable = false)
	@NotNull
	public PersonWorkRelation getPersonWorkRelation() {
		return this.personWorkRelation;
	}

	public void setPersonWorkRelation(PersonWorkRelation personWorkRelation) {
		this.personWorkRelation = personWorkRelation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Person", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Work", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Work getWork() {
		return this.work;
	}

	public void setWork(Work work) {
		this.work = work;
	}

}
