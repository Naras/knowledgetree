package org.srvvp.knowledgetree.entity;
// Generated 3 Oct, 2017 8:09:20 PM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * SubjectSubjectRelation generated by hbm2java
 */
@Entity
@Table(name = "subject_subject_relation", catalog = "knowledgetree")
public class SubjectSubjectRelation implements java.io.Serializable {

	private String id;
	private String name;
	private String description;
	private Set<SubjectRelatestoSubject> subjectRelatestoSubjects = new HashSet<SubjectRelatestoSubject>(
			0);

	public SubjectSubjectRelation() {
	}

	public SubjectSubjectRelation(String id) {
		this.id = id;
	}
	public SubjectSubjectRelation(String id, String name, String description,
			Set<SubjectRelatestoSubject> subjectRelatestoSubjects) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.subjectRelatestoSubjects = subjectRelatestoSubjects;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "Name", length = 100)
	@Length(max = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Description", length = 1000)
	@Length(max = 1000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subjectSubjectRelation")
	public Set<SubjectRelatestoSubject> getSubjectRelatestoSubjects() {
		return this.subjectRelatestoSubjects;
	}

	public void setSubjectRelatestoSubjects(
			Set<SubjectRelatestoSubject> subjectRelatestoSubjects) {
		this.subjectRelatestoSubjects = subjectRelatestoSubjects;
	}

}
