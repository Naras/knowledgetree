package org.srvvp.knowledgetree.entity;
// Generated 3 Oct, 2017 8:09:20 PM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Work generated by hbm2java
 */
@Entity
@Table(name = "work", catalog = "knowledgetree")
public class Work implements java.io.Serializable {

	private String id;
	private String name;
	private String description;
	private Set<SubjectHasWork> subjectHasWorks = new HashSet<SubjectHasWork>(0);
	private Set<WorkRelatestoWork> workRelatestoWorksForWork2 = new HashSet<WorkRelatestoWork>(
			0);
	private Set<WorkHasTag> workHasTags = new HashSet<WorkHasTag>(0);
	private Set<WorkInScript> workInScripts = new HashSet<WorkInScript>(0);
	private Set<WorkInLanguage> workInLanguages = new HashSet<WorkInLanguage>(0);
	private Set<PersonHasWork> personHasWorks = new HashSet<PersonHasWork>(0);
	private Set<WorkRelatestoWork> workRelatestoWorksForWork1 = new HashSet<WorkRelatestoWork>(
			0);

	public Work() {
	}

	public Work(String id) {
		this.id = id;
	}
	public Work(String id, String name, String description,
			Set<SubjectHasWork> subjectHasWorks,
			Set<WorkRelatestoWork> workRelatestoWorksForWork2,
			Set<WorkHasTag> workHasTags, Set<WorkInScript> workInScripts,
			Set<WorkInLanguage> workInLanguages,
			Set<PersonHasWork> personHasWorks,
			Set<WorkRelatestoWork> workRelatestoWorksForWork1) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.subjectHasWorks = subjectHasWorks;
		this.workRelatestoWorksForWork2 = workRelatestoWorksForWork2;
		this.workHasTags = workHasTags;
		this.workInScripts = workInScripts;
		this.workInLanguages = workInLanguages;
		this.personHasWorks = personHasWorks;
		this.workRelatestoWorksForWork1 = workRelatestoWorksForWork1;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "Name", length = 45)
	@Length(max = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Description", length = 5000)
	@Length(max = 5000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "work")
	public Set<SubjectHasWork> getSubjectHasWorks() {
		return this.subjectHasWorks;
	}

	public void setSubjectHasWorks(Set<SubjectHasWork> subjectHasWorks) {
		this.subjectHasWorks = subjectHasWorks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workByWork2")
	public Set<WorkRelatestoWork> getWorkRelatestoWorksForWork2() {
		return this.workRelatestoWorksForWork2;
	}

	public void setWorkRelatestoWorksForWork2(
			Set<WorkRelatestoWork> workRelatestoWorksForWork2) {
		this.workRelatestoWorksForWork2 = workRelatestoWorksForWork2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "work")
	public Set<WorkHasTag> getWorkHasTags() {
		return this.workHasTags;
	}

	public void setWorkHasTags(Set<WorkHasTag> workHasTags) {
		this.workHasTags = workHasTags;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "work")
	public Set<WorkInScript> getWorkInScripts() {
		return this.workInScripts;
	}

	public void setWorkInScripts(Set<WorkInScript> workInScripts) {
		this.workInScripts = workInScripts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "work")
	public Set<WorkInLanguage> getWorkInLanguages() {
		return this.workInLanguages;
	}

	public void setWorkInLanguages(Set<WorkInLanguage> workInLanguages) {
		this.workInLanguages = workInLanguages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "work")
	public Set<PersonHasWork> getPersonHasWorks() {
		return this.personHasWorks;
	}

	public void setPersonHasWorks(Set<PersonHasWork> personHasWorks) {
		this.personHasWorks = personHasWorks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workByWork1")
	public Set<WorkRelatestoWork> getWorkRelatestoWorksForWork1() {
		return this.workRelatestoWorksForWork1;
	}

	public void setWorkRelatestoWorksForWork1(
			Set<WorkRelatestoWork> workRelatestoWorksForWork1) {
		this.workRelatestoWorksForWork1 = workRelatestoWorksForWork1;
	}

}
