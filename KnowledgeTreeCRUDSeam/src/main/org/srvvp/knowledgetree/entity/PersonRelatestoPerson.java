package org.srvvp.knowledgetree.entity;
// Generated 3 Oct, 2017 8:09:20 PM by Hibernate Tools 3.2.4.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.validator.NotNull;

/**
 * PersonRelatestoPerson generated by hbm2java
 */
@Entity
@Table(name = "person_relatesto_person", catalog = "knowledgetree")
public class PersonRelatestoPerson implements java.io.Serializable {

	private PersonRelatestoPersonId id;
	private PersonPersonRelation personPersonRelation;
	private Person personByPerson2;
	private Person personByPerson1;

	public PersonRelatestoPerson() {
	}

	public PersonRelatestoPerson(PersonRelatestoPersonId id,
			PersonPersonRelation personPersonRelation, Person personByPerson2,
			Person personByPerson1) {
		this.id = id;
		this.personPersonRelation = personPersonRelation;
		this.personByPerson2 = personByPerson2;
		this.personByPerson1 = personByPerson1;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "person1", column = @Column(name = "person1", nullable = false, length = 20)),
			@AttributeOverride(name = "person2", column = @Column(name = "person2", nullable = false, length = 20)),
			@AttributeOverride(name = "relation", column = @Column(name = "relation", nullable = false, length = 20))})
	@NotNull
	public PersonRelatestoPersonId getId() {
		return this.id;
	}

	public void setId(PersonRelatestoPersonId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "relation", nullable = false, insertable = false, updatable = false)
	@NotNull
	public PersonPersonRelation getPersonPersonRelation() {
		return this.personPersonRelation;
	}

	public void setPersonPersonRelation(
			PersonPersonRelation personPersonRelation) {
		this.personPersonRelation = personPersonRelation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person2", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Person getPersonByPerson2() {
		return this.personByPerson2;
	}

	public void setPersonByPerson2(Person personByPerson2) {
		this.personByPerson2 = personByPerson2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person1", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Person getPersonByPerson1() {
		return this.personByPerson1;
	}

	public void setPersonByPerson1(Person personByPerson1) {
		this.personByPerson1 = personByPerson1;
	}

}
