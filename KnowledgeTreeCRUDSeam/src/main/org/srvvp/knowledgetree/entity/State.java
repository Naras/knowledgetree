package org.srvvp.knowledgetree.entity;
// Generated 3 Oct, 2017 8:09:20 PM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * State generated by hbm2java
 */
@Entity
@Table(name = "state", catalog = "knowledgetree")
public class State implements java.io.Serializable {

	private StateId id;
	private Country country;
	private String name;
	private Set<District> districts = new HashSet<District>(0);
	private Set<City> cities = new HashSet<City>(0);

	public State() {
	}

	public State(StateId id, Country country) {
		this.id = id;
		this.country = country;
	}
	public State(StateId id, Country country, String name,
			Set<District> districts, Set<City> cities) {
		this.id = id;
		this.country = country;
		this.name = name;
		this.districts = districts;
		this.cities = cities;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "id", column = @Column(name = "id", nullable = false, length = 10)),
			@AttributeOverride(name = "countryId", column = @Column(name = "Country_id", nullable = false, length = 10))})
	@NotNull
	public StateId getId() {
		return this.id;
	}

	public void setId(StateId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Country_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@Column(name = "Name", length = 100)
	@Length(max = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	public Set<District> getDistricts() {
		return this.districts;
	}

	public void setDistricts(Set<District> districts) {
		this.districts = districts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "state")
	public Set<City> getCities() {
		return this.cities;
	}

	public void setCities(Set<City> cities) {
		this.cities = cities;
	}

}
